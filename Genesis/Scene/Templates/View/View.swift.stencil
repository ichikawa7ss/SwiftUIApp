//
//  {{ sceneName }}View.swift
//  Presentation
//
//  Created by {{ developerName }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developerCompany }}. All rights reserved.
//

import AppCore
import SwiftUI

protocol {{ sceneName }}ViewInput: AnyObject {
    // func repoListViewSearchRepositories(searchQuery: String)
    // func repoListViewLoadMoreRepositories()
    // func repoListViewDidTapRepository(_ repository: GitHubRepository)
}

struct {{ sceneName }}View: View {

    private weak var input: {{ sceneName }}ViewInput?

    @ObservedObject
    private var dataSource: DataSource

    init(input: {{ sceneName }}ViewInput?, dataSource: DataSource) {
        self.input = input
        self.dataSource = dataSource
    }

    var body: some View {
        Text("{{ sceneName }}")
    }
}

// MARK: - DataSource
extension {{ sceneName }}View {
    class DataSource: ObservableObject {
        @Published var inputText = ""
        @Published var isErrorShown = false
        @Published var repositories = [GitHubRepository]()
        @Published var hasNext = false

        var errorTitle = ""
        var errorMessage = ""
        var retryHandler: (() -> Void)? = nil
    }
}

extension {{ sceneName }}View.DataSource {
    static let mock: {{ sceneName }}View.DataSource = {
        let mock = {{ sceneName }}View.DataSource()
        mock.inputText = "Swift"
        mock.repositories = [
            .init(
                id: 1,
                fullName: "y-okudera/SwiftUIApp",
                description: "Swift Package based App.",
                stargazersCount: 1234,
                language: "Swift",
                htmlUrl: URL(string: "https://github.com/y-okudera/SwiftUIApp")!,
                owner: GitHubUser(
                    id: 100,
                    login: "mock",
                    avatarUrl: URL(string: "https://avatars.githubusercontent.com/u/25205138?v=4")!,
                    htmlUrl: URL(string: "https://github.com/y-okudera")!,
                    type: "User"
                )
            )
        ]
        return mock
    }()
}

#if DEBUG
    struct {{ sceneName }}View_Previews: PreviewProvider {
        static var previews: some View {
            AppPreview {
                {{ sceneName }}View(input: nil, dataSource: .mock)
            }
        }
    }
#endif
